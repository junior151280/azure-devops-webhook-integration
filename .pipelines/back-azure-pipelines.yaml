trigger:
  branches:
    include:
    - main
  paths:
    include:
    - BACK
    exclude:
    - FRONT
    - .pipelines

variables:
  vmImageName: 'ubuntu-latest'
  project: '**/ADOWebhook.Back.csproj'
  configuration: 'Release'

stages:
- stage: Build
  jobs:
  - job: Build
    pool:
      vmImage: $(vmImageName)
    steps:
    - task: DotNetCoreCLI@2
      displayName: Restauração de Pacotes
      inputs:
        command: 'restore'
        projects: '$(project)'
        feedsToUse: 'select'

    - task: DotNetCoreCLI@2
      displayName: Build dos Projetos
      inputs:
        command: 'build'
        projects: '$(project)'
        arguments: '--no-restore --configuration $(configuration)'
    
    - task: DotNetCoreCLI@2
      displayName: Publicação dos Projetos WEB
      inputs:
        command: 'publish'
        publishWebProjects: false
        projects: '$(project)'
        arguments: '--no-restore --no-build --configuration $(configuration) --output $(Build.ArtifactStagingDirectory)/drop'
        modifyOutputPath: false
    
    - task: PublishPipelineArtifact@1
      displayName: Publicação do resultado do Build
      inputs:
        targetPath: '$(Build.ArtifactStagingDirectory)/drop'
        artifact: 'drop'
        publishLocation: 'pipeline'


- stage: Deploy
  jobs:
  - deployment: Deploy
    displayName: Deploy
    pool:
      vmImage: $(vmImageName)
    environment: development
    strategy:
      runOnce:
        deploy:
          steps:
          - task: DownloadPipelineArtifact@2
            displayName: Download Pipeline Artifact
            inputs:
              buildType: 'current'
              artifactName: 'drop'
              targetPath: '$(Build.ArtifactStagingDirectory)'

          - task: AzureWebApp@1
            displayName: Deploy Web App
            inputs:
              azureSubscription: 'poc-usiminas'
              appType: 'webAppLinux'
              appName: 'adowebhook-back'
              package: '$(Build.ArtifactStagingDirectory)/**/*.zip'